// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model MedicalRecord {
  id                 String   @id @default(cuid()) @map("_id")
  history            String
  clinicalParameters String
  diagnosis          String
  treatment          String
  recommendations    String
  nextAppointment    DateTime
  signature          String
  pet                Pet      @relation(fields: [petId], references: [id])
  petId              String
}

model Doctor {
  id       String @id @default(cuid()) @map("_id")
  name     String
  email    String @unique
  password String
  role     String @default("doctor")
}

model PetOwner {
  id          String @id @default(cuid()) @map("_id")
  name        String
  phoneNumber String
  email       String @unique
  pets        Pet[]
  password    String
  role        String @default("user")

  Appointment Appointment[]
}

// model Vet {
//   id          String @id @default(cuid()) @map("_id")
//   name        String
//   specialty   String
//   phoneNumber String
//   email       String @unique
// }

model Appointment {
  id     String   @id @default(cuid()) @map("_id")
  date   DateTime
  time   DateTime
  reason String
  status String   @default("upcoming") // Add this line
  notes  String? // Add this line

  petOwner   PetOwner @relation(fields: [petOwnerId], references: [id])
  pet        Pet      @relation(fields: [petId], references: [id])
  petOwnerId String
  petId      String

  @@index([petId])
}

model Pet {
  id          String   @id @default(cuid()) @map("_id")
  name        String
  species     String
  breed       String
  age         DateTime
  imageUrl    String?
  owner       PetOwner @relation(fields: [ownerId], references: [id])
  ownerId     String
  description String?

  appointments Appointment[]
  vaccinations Vaccination[]
  records      MedicalRecord[]
}

model Vaccination {
  id       String   @id @default(cuid()) @map("_id")
  name     String
  date     DateTime
  status   String    @default("upcoming") // Add this line
  notes    String? // Add this line
  imageUrl String                               // Add this line for the vaccine image URL
  nextDate DateTime? // Add this line
  pet      Pet       @relation(fields: [petId], references: [id])
  petId    String
}
